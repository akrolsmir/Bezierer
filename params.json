{"name":"Bezierer","tagline":"Austin and Alec's CS184 Project 3","body":"## About\r\nA sweet Bezier surface converter.\r\n\r\nAuthors: Alec Mouri (cs184-cq) and Austin Chen (cs184-cn)\r\n\r\nThis program is written in Java, and was developed against the Windows and Android platforms.\r\n\r\nYoutube \r\n\r\n## Features\r\n* Conversion from Bezier patches to Polygon representations\r\n* Rendering of objects using OpenGL\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-01.jpg)\r\n\r\n* Toggling of Uniform and Adaptive Tessellation\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-02.jpg)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-03.jpg)\r\n\r\n* Toggling between flat and smooth shading\r\n* Input and output of .obj files\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-15.jpg)\r\n![](http://puu.sh/8eDQ7.png)\r\n\r\n* Toggling between filled, wireframe, and hidden-line mode\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-04.jpg)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-05.png)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-06.png)\r\n\r\n* Rotation and Translation of objects\r\n* Loading and control of multiple objects\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-08.jpg)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-09.jpg)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-10.jpg)\r\n\r\n* Vertex color shading of Gaussian curvatures\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-13.jpg)\r\n\r\n* An Android demo (.apk available [here](http://puu.sh/8eDxa.apk))\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-51.png)\r\n![](http://www-inst.eecs.berkeley.edu/~cs184-cn/Bezierer/images/input-52.png)\r\n\r\n\r\n## Command line arguments:\r\nThe first argument is always the input file and the second argument is always a subdivision parameter.\r\nAdditional arguments:\r\n * `-a` -- Specifies the use of adaptive tessellation.\r\n * `-o [file_name]` -- Specifies the output of an .obj file to file_name\r\n\r\n## Controls:\r\n* `s` -- Toggles between flat and smooth shading\r\n* `w` -- Toggles between wireframe and filled mode\r\n* `h` -- Toggles between hidden-line and filled mode\r\n* `Arrow keys` -- Rotates the selected object\r\n* `Shift + arrow keys` -- Translates the selected object\r\n* `+/-` -- Zooms in and out\r\n* `v` -- Selects the next object\r\n* `c` -- Toggles coloring of Gaussian curvature\r\n\r\n## Scene format:\r\nThe .scene file format contains a list of files to be rendered. Each file corresponds to a separate object. Before each file is specified, translations and rotations with respect to the origin must be specified:\r\n\r\nExample (test.scene):\r\n\r\n\ttranslate 0 0 -10\t# Translates Teapot1 -10 along the z-axis\r\n\trotate 0 0 0\t\t# No rotation specified for Teapot1\r\n\tteapot.bez\t\t\t# Defines Teapot1\r\n\ttranslate .5 .5 -15\t# Translates Teapot2 .5 along the x-axis, .5 along the y-axis, -15 along the z-axis, \r\n\trotate 90 90 90\t\t# Rotate Teapot2 by 90 degress along each axis.\r\n\tteapot.bez\t\t\t# Defines Teapot2","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}